---
// import '../styles/tailwind.css';
import "../styles/global.scss";

interface Props {
  title: string;
  description?: string;
}

const {
  title = "Love Art Design",
  description = "Love Art Design - Celebrating Life's Special Moments in Style",
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Love Art Design | {title}</title>

    <!-- google fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Crimson+Text:ital,wght@0,400;0,600;0,700;1,400;1,600;1,700&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <slot />
    <script>
      import "bootstrap/dist/js/bootstrap.js";
      
      // Fade-up animation observer
      document.addEventListener('DOMContentLoaded', () => {
        const fadeUpElements = document.querySelectorAll('.fade-up');
        
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.classList.add('visible');
              // Once the animation is complete, we can stop observing the element
              observer.unobserve(entry.target);
            }
          });
        }, {
          root: null, // viewport
          threshold: 0.1, // trigger when 10% of the element is visible
          rootMargin: '0px 0px -50px 0px' // slightly before elements enter viewport
        });
        
        fadeUpElements.forEach(element => {
          observer.observe(element);
        });
      });
    </script>
  </body>
</html>
